{"ast":null,"code":"var _jsxFileName = \"/Users/cha80186/Documents/GitHub/NewTabPage/new-tab-page_1.0.0_working/src/components/Bookmarks.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from 'react';\nimport \"./styling/Bookmarks.css\";\nimport AddCircleOutlineIcon from '@mui/icons-material/AddCircleOutline';\nimport { paperClasses } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction addLinkDisplay(e) {\n  var xPos = e.target.offsetLeft;\n  var yPos = e.target.offsetTop;\n  var form = document.getElementById(\"linkAdder\");\n  form.style.visibility = \"visible\";\n  form.style.left = xPos - 60 + \"px\";\n  form.style.top = yPos + 80 + \"px\";\n} // This contains how the bookmark holder is going to look and what it consists of\n\n\nconst BookmarkHolderStruc = _ref => {\n  let {\n    bgc,\n    fgc,\n    id\n  } = _ref;\n  // TODO FIXME button id=\"addButton\" is illegal because the id can't be repeated that way\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bookmarkHolder\",\n    id: `bookmarkHolder${id}`,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"bookmarkHolderName${id}\",\n      className: \"bookmarkHolderName\",\n      placeholder: \"untitled\",\n      maxLength: 20\n    }, `bookmarkHolder${id}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bookmarkHolderLinks\",\n      id: `bookmarkHolderLinks${id}`\n    }, `bookmarkHolderLinks${id}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: `addLinkButton${id}`,\n      class: \"addLinkButton\",\n      className: \"addLinkButton\",\n      src: \"../images/addbutton.png\",\n      onClick: e => addLinkDisplay(e)\n    }, `addLinkButton${id}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 3\n  }, this);\n};\n\n_c = BookmarkHolderStruc;\n\nconst Bookmarks = () => {\n  _s();\n\n  const [bookmarkCategories, setBookmarkCategories] = useState([]);\n  var currentId = null;\n\n  function createBookmarkHolder() {\n    // bookmarkCategories.push(<BookmarkHolderStruc bgc=\"black\" fgc=\"white\" id={bookmarkCategories.length} />);\n    setBookmarkCategories(prevState => [...prevState, /*#__PURE__*/_jsxDEV(BookmarkHolderStruc, {\n      bgc: \"black\",\n      fgc: \"white\",\n      id: bookmarkCategories.length\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 57\n    }, this)]);\n  }\n\n  function handleKeys(e) {\n    let linkName = document.getElementById(\"linkName\").value,\n        linkUrl = document.getElementById(\"linkInput\").value;\n\n    if (e.keyCode === 13 && linkName.length > 0 && linkUrl.length > 0) {\n      for (let index = 0; index < bookmarkCategories.length; ++index) {\n        if (bookmarkCategories[index].id === currentId) {\n          bookmarkCategories[index].addLink(linkName, linkUrl);\n        }\n      }\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"bookmarkWrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"linkAdder\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"linkName\",\n        placeholder: \"Enter Name\",\n        onKeyDown: handleKeys\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"linkInput\",\n        placeholder: \"Enter Link\",\n        onKeyDown: handleKeys\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddCircleOutlineIcon, {\n      color: \"primary\",\n      id: \"addStickerButton\",\n      onClick: () => createBookmarkHolder()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), bookmarkCategories.map(item => {\n      return /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: item\n      }, item, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 50\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Bookmarks, \"cE/l8ogxaUKjraHOBIiqU0dROhI=\");\n\n_c2 = Bookmarks;\nexport default Bookmarks;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"BookmarkHolderStruc\");\n$RefreshReg$(_c2, \"Bookmarks\");","map":{"version":3,"sources":["/Users/cha80186/Documents/GitHub/NewTabPage/new-tab-page_1.0.0_working/src/components/Bookmarks.js"],"names":["React","useState","AddCircleOutlineIcon","paperClasses","addLinkDisplay","e","xPos","target","offsetLeft","yPos","offsetTop","form","document","getElementById","style","visibility","left","top","BookmarkHolderStruc","bgc","fgc","id","Bookmarks","bookmarkCategories","setBookmarkCategories","currentId","createBookmarkHolder","prevState","length","handleKeys","linkName","value","linkUrl","keyCode","index","addLink","map","item"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useState } from 'react';\nimport \"./styling/Bookmarks.css\";\nimport AddCircleOutlineIcon from '@mui/icons-material/AddCircleOutline';\nimport { paperClasses } from '@mui/material';\n\n\nfunction addLinkDisplay(e){\n  var xPos = e.target.offsetLeft;\n  var yPos = e.target.offsetTop;\n  var form = document.getElementById(\"linkAdder\");\n\n  form.style.visibility = \"visible\";\n  form.style.left = xPos-60+\"px\";\n  form.style.top = yPos+80+\"px\";\n}\n// This contains how the bookmark holder is going to look and what it consists of\nconst BookmarkHolderStruc = ({ bgc, fgc, id }) => {\n\n  // TODO FIXME button id=\"addButton\" is illegal because the id can't be repeated that way\n  return(\n  <div className=\"bookmarkHolder\" id={`bookmarkHolder${id}`}>\n    <input id=\"bookmarkHolderName${id}\"\n      className=\"bookmarkHolderName\"\n      placeholder=\"untitled\"\n      key={`bookmarkHolder${id}`}\n      maxLength={20} />\n\n    <div className=\"bookmarkHolderLinks\"\n      id={`bookmarkHolderLinks${id}`}\n      key={`bookmarkHolderLinks${id}`}></div>\n\n    <button id={`addLinkButton${id}`}\n      class={\"addLinkButton\"}\n      className=\"addLinkButton\"\n      src=\"../images/addbutton.png\"\n      key={`addLinkButton${id}`}\n      onClick={(e) => addLinkDisplay(e)}\n      ></button>\n      \n  </div>\n  );\n}\n\n\n\n\nconst Bookmarks = () => {\n\n\n  const [bookmarkCategories, setBookmarkCategories] = useState([]);\n  var currentId = null;\n\n\n  function createBookmarkHolder() {\n    // bookmarkCategories.push(<BookmarkHolderStruc bgc=\"black\" fgc=\"white\" id={bookmarkCategories.length} />);\n    setBookmarkCategories((prevState) => [...prevState, <BookmarkHolderStruc bgc=\"black\" fgc=\"white\" id={bookmarkCategories.length} />])\n  }\n\n\n\n  function handleKeys(e) {\n\n    let linkName = document.getElementById(\"linkName\").value,\n      linkUrl = document.getElementById(\"linkInput\").value;\n\n    if ((e.keyCode === 13) && (linkName.length > 0) && (linkUrl.length > 0)) {\n      for (let index = 0; index < bookmarkCategories.length; ++index) {\n        if (bookmarkCategories[index].id === currentId) {\n          bookmarkCategories[index].addLink(linkName, linkUrl);\n        }\n      }\n    }\n  }\n\n\n\n  return (\n    <div id=\"bookmarkWrapper\">\n\n      <div id=\"linkAdder\">\n        <input id=\"linkName\" placeholder=\"Enter Name\" onKeyDown={handleKeys}></input>\n        <input id=\"linkInput\" placeholder=\"Enter Link\" onKeyDown={handleKeys}></input>\n      </div>\n      <AddCircleOutlineIcon color=\"primary\" id=\"addStickerButton\" onClick={() => createBookmarkHolder()}></AddCircleOutlineIcon>\n      {\n        bookmarkCategories.map((item => { return <React.Fragment key={item}>{item}</React.Fragment> }))\n      }\n    </div>\n  );\n}\n\nexport default Bookmarks;"]},"metadata":{},"sourceType":"module"}